// Generated from ./WACCLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WACCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WHITESPACE=1, STD=2, EXCL=3, LEN=4, ORD=5, CHR=6, INC=7, DEC=8, MULT=9, 
		DIV=10, MOD=11, PLUS=12, MINUS=13, GT=14, GTE=15, LT=16, LTE=17, EQ=18, 
		NEQ=19, AND=20, OR=21, TRUE=22, FALSE=23, ESCAPE=24, INT=25, BOOL=26, 
		CHAR=27, STRING=28, PAIR=29, OPEN_PARENTHESES=30, CLOSE_PARENTHESES=31, 
		OPEN_ARRAY=32, CLOSE_ARRAY=33, INT_SIGN=34, INTEGER=35, BEGIN=36, END=37, 
		IS=38, COMMA=39, SKIP=40, ASSIGN=41, READ=42, FREE=43, RETURN=44, EXIT=45, 
		PRINT=46, PRINTLN=47, IF=48, THEN=49, ELSE=50, FI=51, WHILE=52, FOR=53, 
		DO=54, DONE=55, SEMI_COLON=56, NEWPAIR=57, CALL=58, FST=59, SND=60, SINGLE_QUOTE=61, 
		DOUBLE_QUOTE=62, CHAR_LITER=63, STRING_LITER=64, PAIR_LITER=65, IDENT=66, 
		HASH=67, COMMENT=68, NOT_NEW_LINE=69, NEW_LINE=70;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='", "'>'", "'?'", "'@'", "'A'", "'B'", "'C'", "'D'", "'E'", 
		"'F'"
	};
	public static final String[] ruleNames = {
		"WHITESPACE", "STD", "EXCL", "LEN", "ORD", "CHR", "INC", "DEC", "MULT", 
		"DIV", "MOD", "PLUS", "MINUS", "GT", "GTE", "LT", "LTE", "EQ", "NEQ", 
		"AND", "OR", "TRUE", "FALSE", "ESCAPE", "INT", "BOOL", "CHAR", "STRING", 
		"PAIR", "OPEN_PARENTHESES", "CLOSE_PARENTHESES", "OPEN_ARRAY", "CLOSE_ARRAY", 
		"ESCAPED_CHAR", "CHARACTER", "ALPHA", "DIGIT", "INT_SIGN", "INTEGER", 
		"BEGIN", "END", "IS", "COMMA", "SKIP", "ASSIGN", "READ", "FREE", "RETURN", 
		"EXIT", "PRINT", "PRINTLN", "IF", "THEN", "ELSE", "FI", "WHILE", "FOR", 
		"DO", "DONE", "SEMI_COLON", "NEWPAIR", "CALL", "FST", "SND", "SINGLE_QUOTE", 
		"DOUBLE_QUOTE", "CHAR_LITER", "STRING_LITER", "PAIR_LITER", "IDENT", "HASH", 
		"COMMENT", "NOT_NEW_LINE", "NEW_LINE"
	};


	public WACCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WACCLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2H\u01bd\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3"+
		"\5\3\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n"+
		"\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21"+
		"\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3\26"+
		"\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31"+
		"\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37"+
		"\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3$\5$\u0109\n$\3%\3%\3&\3&\3\'\3\'\5"+
		"\'\u0111\n\'\3(\6(\u0114\n(\r(\16(\u0115\3)\3)\3)\3)\3)\3)\3*\3*\3*\3"+
		"*\3+\3+\3+\3,\3,\3-\3-\3-\3-\3-\3.\3.\3/\3/\3/\3/\3/\3\60\3\60\3\60\3"+
		"\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3"+
		"\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3"+
		"\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\38\38"+
		"\38\39\39\39\39\39\39\3:\3:\3:\3:\3;\3;\3;\3<\3<\3<\3<\3<\3=\3=\3>\3>"+
		"\3>\3>\3>\3>\3>\3>\3?\3?\3?\3?\3?\3@\3@\3@\3@\3A\3A\3A\3A\3B\3B\3C\3C"+
		"\3D\3D\3D\3D\3E\3E\7E\u0195\nE\fE\16E\u0198\13E\3E\3E\3F\3F\3F\3F\3F\3"+
		"G\3G\5G\u01a3\nG\3G\3G\3G\7G\u01a8\nG\fG\16G\u01ab\13G\3H\3H\3I\3I\7I"+
		"\u01b1\nI\fI\16I\u01b4\13I\3I\3I\3I\3I\3J\3J\3K\3K\2\2L\3\3\5\4\7\5\t"+
		"\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E\2"+
		"G\2I\2K\2M$O%Q&S\'U(W)Y*[+],_-a.c/e\60g\61i\62k\63m\64o\65q\66s\67u8w"+
		"9y:{;}<\177=\u0081>\u0083?\u0085@\u0087A\u0089B\u008bC\u008dD\u008fE\u0091"+
		"F\u0093G\u0095H\3\2\7\4\2\13\f\"\"\13\2$$))\62\62^^ddhhppttvv\5\2$$))"+
		"^^\4\2C\\c|\3\2\f\f\u01c1\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2"+
		"\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2"+
		"\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3"+
		"\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2"+
		"\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67"+
		"\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2"+
		"\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2"+
		"\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e"+
		"\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2"+
		"\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2"+
		"\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087"+
		"\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2"+
		"\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\3\u0097\3\2\2\2\5\u009b"+
		"\3\2\2\2\7\u00a0\3\2\2\2\t\u00a2\3\2\2\2\13\u00a6\3\2\2\2\r\u00aa\3\2"+
		"\2\2\17\u00ae\3\2\2\2\21\u00b1\3\2\2\2\23\u00b4\3\2\2\2\25\u00b6\3\2\2"+
		"\2\27\u00b8\3\2\2\2\31\u00ba\3\2\2\2\33\u00bc\3\2\2\2\35\u00be\3\2\2\2"+
		"\37\u00c0\3\2\2\2!\u00c3\3\2\2\2#\u00c5\3\2\2\2%\u00c8\3\2\2\2\'\u00cb"+
		"\3\2\2\2)\u00ce\3\2\2\2+\u00d1\3\2\2\2-\u00d4\3\2\2\2/\u00d9\3\2\2\2\61"+
		"\u00df\3\2\2\2\63\u00e1\3\2\2\2\65\u00e5\3\2\2\2\67\u00ea\3\2\2\29\u00ef"+
		"\3\2\2\2;\u00f6\3\2\2\2=\u00fb\3\2\2\2?\u00fd\3\2\2\2A\u00ff\3\2\2\2C"+
		"\u0101\3\2\2\2E\u0103\3\2\2\2G\u0108\3\2\2\2I\u010a\3\2\2\2K\u010c\3\2"+
		"\2\2M\u0110\3\2\2\2O\u0113\3\2\2\2Q\u0117\3\2\2\2S\u011d\3\2\2\2U\u0121"+
		"\3\2\2\2W\u0124\3\2\2\2Y\u0126\3\2\2\2[\u012b\3\2\2\2]\u012d\3\2\2\2_"+
		"\u0132\3\2\2\2a\u0137\3\2\2\2c\u013e\3\2\2\2e\u0143\3\2\2\2g\u0149\3\2"+
		"\2\2i\u0151\3\2\2\2k\u0154\3\2\2\2m\u0159\3\2\2\2o\u015e\3\2\2\2q\u0161"+
		"\3\2\2\2s\u0167\3\2\2\2u\u016b\3\2\2\2w\u016e\3\2\2\2y\u0173\3\2\2\2{"+
		"\u0175\3\2\2\2}\u017d\3\2\2\2\177\u0182\3\2\2\2\u0081\u0186\3\2\2\2\u0083"+
		"\u018a\3\2\2\2\u0085\u018c\3\2\2\2\u0087\u018e\3\2\2\2\u0089\u0192\3\2"+
		"\2\2\u008b\u019b\3\2\2\2\u008d\u01a2\3\2\2\2\u008f\u01ac\3\2\2\2\u0091"+
		"\u01ae\3\2\2\2\u0093\u01b9\3\2\2\2\u0095\u01bb\3\2\2\2\u0097\u0098\t\2"+
		"\2\2\u0098\u0099\3\2\2\2\u0099\u009a\b\2\2\2\u009a\4\3\2\2\2\u009b\u009c"+
		"\7u\2\2\u009c\u009d\7v\2\2\u009d\u009e\7f\2\2\u009e\u009f\7\60\2\2\u009f"+
		"\6\3\2\2\2\u00a0\u00a1\7#\2\2\u00a1\b\3\2\2\2\u00a2\u00a3\7n\2\2\u00a3"+
		"\u00a4\7g\2\2\u00a4\u00a5\7p\2\2\u00a5\n\3\2\2\2\u00a6\u00a7\7q\2\2\u00a7"+
		"\u00a8\7t\2\2\u00a8\u00a9\7f\2\2\u00a9\f\3\2\2\2\u00aa\u00ab\7e\2\2\u00ab"+
		"\u00ac\7j\2\2\u00ac\u00ad\7t\2\2\u00ad\16\3\2\2\2\u00ae\u00af\7-\2\2\u00af"+
		"\u00b0\7-\2\2\u00b0\20\3\2\2\2\u00b1\u00b2\7/\2\2\u00b2\u00b3\7/\2\2\u00b3"+
		"\22\3\2\2\2\u00b4\u00b5\7,\2\2\u00b5\24\3\2\2\2\u00b6\u00b7\7\61\2\2\u00b7"+
		"\26\3\2\2\2\u00b8\u00b9\7\'\2\2\u00b9\30\3\2\2\2\u00ba\u00bb\7-\2\2\u00bb"+
		"\32\3\2\2\2\u00bc\u00bd\7/\2\2\u00bd\34\3\2\2\2\u00be\u00bf\7@\2\2\u00bf"+
		"\36\3\2\2\2\u00c0\u00c1\7@\2\2\u00c1\u00c2\7?\2\2\u00c2 \3\2\2\2\u00c3"+
		"\u00c4\7>\2\2\u00c4\"\3\2\2\2\u00c5\u00c6\7>\2\2\u00c6\u00c7\7?\2\2\u00c7"+
		"$\3\2\2\2\u00c8\u00c9\7?\2\2\u00c9\u00ca\7?\2\2\u00ca&\3\2\2\2\u00cb\u00cc"+
		"\7#\2\2\u00cc\u00cd\7?\2\2\u00cd(\3\2\2\2\u00ce\u00cf\7(\2\2\u00cf\u00d0"+
		"\7(\2\2\u00d0*\3\2\2\2\u00d1\u00d2\7~\2\2\u00d2\u00d3\7~\2\2\u00d3,\3"+
		"\2\2\2\u00d4\u00d5\7v\2\2\u00d5\u00d6\7t\2\2\u00d6\u00d7\7w\2\2\u00d7"+
		"\u00d8\7g\2\2\u00d8.\3\2\2\2\u00d9\u00da\7h\2\2\u00da\u00db\7c\2\2\u00db"+
		"\u00dc\7n\2\2\u00dc\u00dd\7u\2\2\u00dd\u00de\7g\2\2\u00de\60\3\2\2\2\u00df"+
		"\u00e0\7^\2\2\u00e0\62\3\2\2\2\u00e1\u00e2\7k\2\2\u00e2\u00e3\7p\2\2\u00e3"+
		"\u00e4\7v\2\2\u00e4\64\3\2\2\2\u00e5\u00e6\7d\2\2\u00e6\u00e7\7q\2\2\u00e7"+
		"\u00e8\7q\2\2\u00e8\u00e9\7n\2\2\u00e9\66\3\2\2\2\u00ea\u00eb\7e\2\2\u00eb"+
		"\u00ec\7j\2\2\u00ec\u00ed\7c\2\2\u00ed\u00ee\7t\2\2\u00ee8\3\2\2\2\u00ef"+
		"\u00f0\7u\2\2\u00f0\u00f1\7v\2\2\u00f1\u00f2\7t\2\2\u00f2\u00f3\7k\2\2"+
		"\u00f3\u00f4\7p\2\2\u00f4\u00f5\7i\2\2\u00f5:\3\2\2\2\u00f6\u00f7\7r\2"+
		"\2\u00f7\u00f8\7c\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa\7t\2\2\u00fa<\3\2"+
		"\2\2\u00fb\u00fc\7*\2\2\u00fc>\3\2\2\2\u00fd\u00fe\7+\2\2\u00fe@\3\2\2"+
		"\2\u00ff\u0100\7]\2\2\u0100B\3\2\2\2\u0101\u0102\7_\2\2\u0102D\3\2\2\2"+
		"\u0103\u0104\t\3\2\2\u0104F\3\2\2\2\u0105\u0109\n\4\2\2\u0106\u0107\7"+
		"^\2\2\u0107\u0109\5E#\2\u0108\u0105\3\2\2\2\u0108\u0106\3\2\2\2\u0109"+
		"H\3\2\2\2\u010a\u010b\t\5\2\2\u010bJ\3\2\2\2\u010c\u010d\4\62;\2\u010d"+
		"L\3\2\2\2\u010e\u0111\5\31\r\2\u010f\u0111\5\33\16\2\u0110\u010e\3\2\2"+
		"\2\u0110\u010f\3\2\2\2\u0111N\3\2\2\2\u0112\u0114\5K&\2\u0113\u0112\3"+
		"\2\2\2\u0114\u0115\3\2\2\2\u0115\u0113\3\2\2\2\u0115\u0116\3\2\2\2\u0116"+
		"P\3\2\2\2\u0117\u0118\7d\2\2\u0118\u0119\7g\2\2\u0119\u011a\7i\2\2\u011a"+
		"\u011b\7k\2\2\u011b\u011c\7p\2\2\u011cR\3\2\2\2\u011d\u011e\7g\2\2\u011e"+
		"\u011f\7p\2\2\u011f\u0120\7f\2\2\u0120T\3\2\2\2\u0121\u0122\7k\2\2\u0122"+
		"\u0123\7u\2\2\u0123V\3\2\2\2\u0124\u0125\7.\2\2\u0125X\3\2\2\2\u0126\u0127"+
		"\7u\2\2\u0127\u0128\7m\2\2\u0128\u0129\7k\2\2\u0129\u012a\7r\2\2\u012a"+
		"Z\3\2\2\2\u012b\u012c\7?\2\2\u012c\\\3\2\2\2\u012d\u012e\7t\2\2\u012e"+
		"\u012f\7g\2\2\u012f\u0130\7c\2\2\u0130\u0131\7f\2\2\u0131^\3\2\2\2\u0132"+
		"\u0133\7h\2\2\u0133\u0134\7t\2\2\u0134\u0135\7g\2\2\u0135\u0136\7g\2\2"+
		"\u0136`\3\2\2\2\u0137\u0138\7t\2\2\u0138\u0139\7g\2\2\u0139\u013a\7v\2"+
		"\2\u013a\u013b\7w\2\2\u013b\u013c\7t\2\2\u013c\u013d\7p\2\2\u013db\3\2"+
		"\2\2\u013e\u013f\7g\2\2\u013f\u0140\7z\2\2\u0140\u0141\7k\2\2\u0141\u0142"+
		"\7v\2\2\u0142d\3\2\2\2\u0143\u0144\7r\2\2\u0144\u0145\7t\2\2\u0145\u0146"+
		"\7k\2\2\u0146\u0147\7p\2\2\u0147\u0148\7v\2\2\u0148f\3\2\2\2\u0149\u014a"+
		"\7r\2\2\u014a\u014b\7t\2\2\u014b\u014c\7k\2\2\u014c\u014d\7p\2\2\u014d"+
		"\u014e\7v\2\2\u014e\u014f\7n\2\2\u014f\u0150\7p\2\2\u0150h\3\2\2\2\u0151"+
		"\u0152\7k\2\2\u0152\u0153\7h\2\2\u0153j\3\2\2\2\u0154\u0155\7v\2\2\u0155"+
		"\u0156\7j\2\2\u0156\u0157\7g\2\2\u0157\u0158\7p\2\2\u0158l\3\2\2\2\u0159"+
		"\u015a\7g\2\2\u015a\u015b\7n\2\2\u015b\u015c\7u\2\2\u015c\u015d\7g\2\2"+
		"\u015dn\3\2\2\2\u015e\u015f\7h\2\2\u015f\u0160\7k\2\2\u0160p\3\2\2\2\u0161"+
		"\u0162\7y\2\2\u0162\u0163\7j\2\2\u0163\u0164\7k\2\2\u0164\u0165\7n\2\2"+
		"\u0165\u0166\7g\2\2\u0166r\3\2\2\2\u0167\u0168\7h\2\2\u0168\u0169\7q\2"+
		"\2\u0169\u016a\7t\2\2\u016at\3\2\2\2\u016b\u016c\7f\2\2\u016c\u016d\7"+
		"q\2\2\u016dv\3\2\2\2\u016e\u016f\7f\2\2\u016f\u0170\7q\2\2\u0170\u0171"+
		"\7p\2\2\u0171\u0172\7g\2\2\u0172x\3\2\2\2\u0173\u0174\7=\2\2\u0174z\3"+
		"\2\2\2\u0175\u0176\7p\2\2\u0176\u0177\7g\2\2\u0177\u0178\7y\2\2\u0178"+
		"\u0179\7r\2\2\u0179\u017a\7c\2\2\u017a\u017b\7k\2\2\u017b\u017c\7t\2\2"+
		"\u017c|\3\2\2\2\u017d\u017e\7e\2\2\u017e\u017f\7c\2\2\u017f\u0180\7n\2"+
		"\2\u0180\u0181\7n\2\2\u0181~\3\2\2\2\u0182\u0183\7h\2\2\u0183\u0184\7"+
		"u\2\2\u0184\u0185\7v\2\2\u0185\u0080\3\2\2\2\u0186\u0187\7u\2\2\u0187"+
		"\u0188\7p\2\2\u0188\u0189\7f\2\2\u0189\u0082\3\2\2\2\u018a\u018b\7)\2"+
		"\2\u018b\u0084\3\2\2\2\u018c\u018d\7$\2\2\u018d\u0086\3\2\2\2\u018e\u018f"+
		"\5\u0083B\2\u018f\u0190\5G$\2\u0190\u0191\5\u0083B\2\u0191\u0088\3\2\2"+
		"\2\u0192\u0196\5\u0085C\2\u0193\u0195\5G$\2\u0194\u0193\3\2\2\2\u0195"+
		"\u0198\3\2\2\2\u0196\u0194\3\2\2\2\u0196\u0197\3\2\2\2\u0197\u0199\3\2"+
		"\2\2\u0198\u0196\3\2\2\2\u0199\u019a\5\u0085C\2\u019a\u008a\3\2\2\2\u019b"+
		"\u019c\7p\2\2\u019c\u019d\7w\2\2\u019d\u019e\7n\2\2\u019e\u019f\7n\2\2"+
		"\u019f\u008c\3\2\2\2\u01a0\u01a3\7a\2\2\u01a1\u01a3\5I%\2\u01a2\u01a0"+
		"\3\2\2\2\u01a2\u01a1\3\2\2\2\u01a3\u01a9\3\2\2\2\u01a4\u01a8\7a\2\2\u01a5"+
		"\u01a8\5I%\2\u01a6\u01a8\5K&\2\u01a7\u01a4\3\2\2\2\u01a7\u01a5\3\2\2\2"+
		"\u01a7\u01a6\3\2\2\2\u01a8\u01ab\3\2\2\2\u01a9\u01a7\3\2\2\2\u01a9\u01aa"+
		"\3\2\2\2\u01aa\u008e\3\2\2\2\u01ab\u01a9\3\2\2\2\u01ac\u01ad\7%\2\2\u01ad"+
		"\u0090\3\2\2\2\u01ae\u01b2\5\u008fH\2\u01af\u01b1\5\u0093J\2\u01b0\u01af"+
		"\3\2\2\2\u01b1\u01b4\3\2\2\2\u01b2\u01b0\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3"+
		"\u01b5\3\2\2\2\u01b4\u01b2\3\2\2\2\u01b5\u01b6\5\u0095K\2\u01b6\u01b7"+
		"\3\2\2\2\u01b7\u01b8\bI\2\2\u01b8\u0092\3\2\2\2\u01b9\u01ba\n\6\2\2\u01ba"+
		"\u0094\3\2\2\2\u01bb\u01bc\7\f\2\2\u01bc\u0096\3\2\2\2\13\2\u0108\u0110"+
		"\u0115\u0196\u01a2\u01a7\u01a9\u01b2\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}